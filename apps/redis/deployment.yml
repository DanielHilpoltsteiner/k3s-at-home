---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
  namespace: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1000
      containers:
        - name: redis
          image: redis:6.0.10-alpine
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
          ports:
            - containerPort: 6379
              name: redis
          command:
            - redis-server
            - "/etc/redis/redis.conf"
          env:
            - name: MASTER
              value: "true"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
          volumeMounts:
            - name: redis-conf
              mountPath: /etc/redis/redis.conf
              readOnly: true
              subPath: redis.conf
            - name: redis-data
              mountPath: /data
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: redis-conf
          configMap:
            name: redis-config
        - name: redis-data
          persistentVolumeClaim:
            claimName: longhorn-pvc-redis
