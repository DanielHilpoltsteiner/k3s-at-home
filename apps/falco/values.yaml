falco:
  image:
    registry: docker.io
    repository: falcosecurity/falco-no-driver
    tag: 0.28.1
    pullPolicy: IfNotPresent
    pullSecrets: []

  docker:
    enabled: false
    socket: /var/run/docker.sock

  containerd:
    enabled: true
    socket: /run/containerd/containerd.sock

  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi

  extraArgs: []
  nodeSelector:
    beta.kubernetes.io/arch: amd64
  affinity: {}

  timezone: Europe/Berlin

  ebpf:
    enabled: true

  falco:
    logLevel: info
    priority: notice
    logStderr: true
    logSyslog: true

    jsonOutput: true
    jsonIncludeOutputProperty: true

    syslogOutput:
      enabled: false

    stdoutOutput:
      enabled: true

    httpOutput:
      enabled: true
      url: "http://falco-falcosidekick:2801/"

    syscallEventDrops:
      actions:
        - ignore
      rate: 1000
      max_burst: 10000

    webserver:
      enabled: false

    grpc:
      enabled: false
      unixSocketPath: ""

    grpcOutput:
      enabled: false

  customRules: {}

  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule

  scc:
    create: false

  extraInitContainers:
    - name: driver-loader
      image: falcosecurity/falco-driver-loader:0.27.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /host/proc
          name: proc-fs
          readOnly: true
        - mountPath: /host/boot
          name: boot-fs
          readOnly: true
        - mountPath: /host/lib/modules
          name: lib-modules
        - mountPath: /host/usr
          name: usr-fs
          readOnly: true
        - mountPath: /host/etc
          name: etc-fs
          readOnly: true
        - mountPath: /root/.falco
          name: driver-fs
      env:
        - name: FALCO_BPF_PROBE
          value:

  extraVolumes:
    - name: driver-fs
      emptyDir: {}

  extraVolumeMounts:
    - mountPath: /root/.falco
      name: driver-fs

falcosidekick:
  replicaCount: 1

  image:
    repository: falcosecurity/falcosidekick
    tag: 2.22.0
    pullPolicy: IfNotPresent

  config:
    existingSecret: "falcosidekick-secret"

  ingress:
    enabled: false

  nodeSelector:
    beta.kubernetes.io/arch: amd64

  tolerations: []

  affinity: {}

  webui:
    enabled: true

    image:
      repository: falcosecurity/falcosidekick-ui
      tag: "v1.0.1"
      pullPolicy: IfNotPresent

    retention: 100

    service:
      type: ClusterIP
      port: 2802

    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx-internal
      hosts:
        - host: falco.home-lab.io
          paths: ["/ui", "/events", "/healthz", "/ws"]

    nodeSelector:
      beta.kubernetes.io/arch: amd64

    tolerations: []

    affinity: {}

falco-exporter:
  enabled: false
  image:
    repository: falcosecurity/falco-exporter
    tag: 0.5.0
    pullPolicy: IfNotPresent

  falco:
    grpcUnixSocketPath: ""
    grpcTimeout: 3m

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi

  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
