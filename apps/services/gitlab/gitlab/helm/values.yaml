---
## The global properties are used to configure multiple charts at once.
## Extended documentation at doc/charts/globals.md
global:
  ## doc/installation/deployment.md#deploy-the-community-edition
  edition: ce

  ## doc/charts/globals.md#application-resource
  application:
    create: false
    links: []
    allowClusterRoles: true
  ## doc/charts/globals.md#configure-host-settings
  hosts:
    domain: technolab.cloud
    hostSuffix:
    https: true
    externalIP:
    ssh: ~
    gitlab:
      name: gitlab.technolab.cloud
      https: true
    minio:
      name: 10.0.40.2:9001
      https: false
    registry: {}
    tls: {}
    smartcard: {}
    kas: {}
    pages: {}


  ## doc/charts/globals.md#configure-ingress-settings
  ingress:
    configureCertmanager: false
    class: traefik
    annotations: {}
    enabled: false
    tls:
      enabled: true
      secretName: services-technolab-cloudflare-org-tls
    path: /

  ## Initial root password for this GitLab installation
  ## Secret created according to doc/installation/secrets.md#initial-root-password
  ## If allowing shared-secrets generation, this is OPTIONAL.
  initialRootPassword:
    secret: gitlab-secrets
    key: initial-root-password

  ## doc/charts/globals.md#configure-postgresql-settings
  psql:
    connectTimeout:
    password:
      useSecret: true
      secret: gitlab-secrets
      key: psql-password
      # file:
    host: 10.0.40.12
    port: 5432
    username: gitlab
    database: gitlab
    applicationName:
    preparedStatements: false


  ## doc/charts/globals.md#configure-redis-settings
  redis:
    password:
      enabled: true
      secret: gitlab-secrets
      key: redis-password
    host: redis-headless.redis.svc.cluster.local
    port: 6379
    scheme: redis

  ## doc/charts/globals.md#configure-gitaly-settings
  gitaly:
    enabled: true
    authToken: {}
    internal:
      names: ['default']
    external: []
    service:
      name: gitaly
      type: ClusterIP
      externalPort: 8075
      internalPort: 8075
      tls:
        externalPort: 8076
        internalPort: 8076
    tls:
      enabled: false

  praefect:
    enabled: false

  ## doc/charts/globals.md#configure-minio-settings
  minio:
    enabled: false

  ## doc/charts/globals.md#configure-grafana-integration
  grafana:
    enabled: false

  ## doc/charts/globals.md#configure-appconfig-settings
  ## Rails based portions of this chart share many settings
  appConfig:
    ## doc/charts/globals.md#general-application-settings
    enableUsagePing: true
    enableSeatLink: true
    enableImpersonation: false
    applicationSettingsCacheSeconds: 60
    defaultCanCreateGroup: true
    usernameChangingEnabled: true
    issueClosingPattern:
    defaultTheme: 11
    defaultProjectsFeatures:
      issues: true
      mergeRequests: true
      wiki: true
      snippets: true
      builds: true
      containerRegistry: false
    webhookTimeout:
    maxRequestDurationSeconds:

    ## doc/charts/globals.md#cron-jobs-related-settings
    cron_jobs:
      stuck_ci_jobs_worker:
        cron: "0 * * * *"
      pipeline_schedule_worker:
        cron: "19 * * * *"
      expire_build_artifacts_worker:
        cron: "50 * * * *"

    ## doc/charts/globals.md#content-security-policy
    contentSecurityPolicy:
      enabled: false

    ## doc/charts/globals.md#lfs-artifacts-uploads-packages-external-mr-diffs
    object_store:
      enabled: true
      proxy_download: true
      storage_options: {}
      connection:
        secret: gitlab-secrets
        key: minio-connection
    lfs:
      enabled: true
      proxy_download: true
      bucket: git-lfs
      connection: {}
    artifacts:
      enabled: true
      proxy_download: true
      bucket: gitlab-artifacts
      connection: {}
    uploads:
      enabled: true
      proxy_download: true
      bucket: gitlab-uploads
      connection: {}
    packages:
      enabled: true
      proxy_download: true
      bucket: gitlab-packages
      connection: {}
    externalDiffs:
      enabled: false
    terraformState:
      enabled: false
    dependencyProxy:
      enabled: false
    ## doc/charts/globals.md#pseudonymizer-settings
    pseudonymizer:
      configMap:
      bucket: gitlab-pseudo
      connection: {}
    backups:
      bucket: gitlab-backups
      tmpBucket: gitlab-tmp

    ## doc/charts/globals.md#incoming-email-settings
    ## doc/installation/deployment.md#incoming-email
    incomingEmail:
      enabled: false

    ## doc/charts/globals.md#service-desk-email-settings
    ## doc/installation/deployment.md#service-desk-email
    serviceDeskEmail:
      enabled: false

    ## doc/charts/globals.md#ldap
    ldap:
      # prevent the use of LDAP for sign-in via web.
      preventSignin: true
      servers: {}

    ## doc/charts/globals.md#kas
    gitlab_kas: {}

    ## doc/charts/globals.md#omniauth
    omniauth:
      enabled: false

    ## doc/charts/globals.md#configure-appconfig-settings
    sentry:
      enabled: false

    smartcard:
      enabled: false

  ## End of global.appConfig

  oauth:
    gitlab-pages: {}

  ## doc/charts/geo.md
  geo:
    enabled: false

  ## doc/charts/gitlab/kas/index.md
  kas:
    enabled: false

  ## doc/charts/globals.md#configure-gitlab-shell-settings
  shell:
    port: 22
    authToken: {}
    hostKeys: {}
    tcp:
      proxyProtocol: false

  ## Rails application secrets
  ## Secret created according to doc/installation/secrets.md#gitlab-rails-secret
  ## If allowing shared-secrets generation, this is OPTIONAL.
  railsSecrets: {}

  ## Rails generic setting, applicable to all Rails-based containers
  rails:
    bootsnap: # Enable / disable Shopify/Bootsnap cache
      enabled: true

  registry:
    bucket: registry
    certificate: {}
    httpSecret: {}
    notifications: {}

  pages:
    enabled: false

  ## GitLab Runner
  ## Secret created according to doc/installation/secrets.md#gitlab-runner-secret
  ## If allowing shared-secrets generation, this is OPTIONAL.
  runner:
    registrationToken:
      secret: gitlab-secrets
      key: runner-registration-token

  ## doc/installation/deployment.md#outgoing-email
  ## Outgoing email server settings
  smtp:
    enabled: true
    address: mailhog.mailhog.svc.cluster.local
    port: 1025
    user_name: ""
    ## doc/installation/secrets.md#smtp-password
    password: {}
    # domain:
    authentication: ""
    starttls_auto: false
    openssl_verify_mode: "none"

  email:
    from: 'gitlab@technolab.cloud'
    display_name: GitLab
    reply_to: 'noreply@technolab.cloud'
    subject_suffix: ''
    smime:
      enabled: false
      secretName: ""
      keyName: "tls.key"
      certName: "tls.crt"

  ## Timezone for containers.
  time_zone: Europe/Berlin

  antiAffinity: soft

  ## doc/charts/globals.md#workhorse
  ## Global settings related to Workhorse
  workhorse:
    serviceName: webservice-default

  ## doc/charts/globals.md#configure-webservice
  webservice:
    workerTimeout: 60

  ## docs/charts/globals.md#service-accounts
  serviceAccount:
    enabled: false
    create: true
    annotations: {}
    ## Name to be used for serviceAccount, otherwise defaults to chart fullname
    # name:

  ## End of global

  upgradeCheck:
    enabled: true
    image: {}
      # repository:
      # tag:
    securityContext:
      # in alpine/debian/busybox based images, this is `nobody:nogroup`
      runAsUser: 65534
      fsGroup: 65534
    tolerations: []
    resources:
      requests:
        cpu: 50m

  ## Settings for individual sub-charts under GitLab
  ## Note: Many of these settings are configurable via globals
  gitlab:
    task-runner:
      replicas: 1
      antiAffinityLabels:
        matchLabels:
          app: 'gitaly'
      backups:
        objectStorage:
          config:
            secret: gitlab-secrets
            key: .s3cfg

## Installation & configuration of jetstack/cert-manager
## See requirements.yaml for current version
certmanager:
  install: false

## doc/charts/nginx/index.md
## doc/architecture/decisions.md#nginx-ingress
## Installation & configuration of charts/ingress-nginx:
nginx-ingress:
  enabled: false

## Installation & configuration of stable/prometheus
## See requirements.yaml for current version
prometheus:
  install: false

## Configuration of Redis
## doc/architecture/decisions.md#redis
## doc/charts/redis
redis:
  install: false

postgresql:
  install: false

registry:
  enabled: false

shared-secrets:
  enabled: true
  rbac:
    create: true

## Installation & configuration of gitlab/gitlab-runner
## See requirements.yaml for current version
gitlab-runner:
  install: false
