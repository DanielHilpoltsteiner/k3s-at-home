---
# helm install -n services bitwarden k8s-at-home/bitwardenrs -f values.yaml
# Default values for bitwardenrs.

replicaCount: 1

image:
  repository: bitwardenrs/server
  pullPolicy: IfNotPresent
  tag: "1.19.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

bitwardenrs:
  domain: "https://bitwarden.technolab.duckdns.org"
  signupsAllowed: false
  gui:
    # If you set a different port here, you must also provide it under env
    port: 8443
  websockets:
    enabled: true
    port: 3012
  admin:
    enabled: true
    disableAdminToken: false
    existingSecret:
      enabled: true
      name: "bitwarden-secret"
      tokenKey: "bitwarden-admin-token"
  # External database configuration.
  # Requires bitwardenrs/server >= 1.17.0 or bitwardenrs/server-{mysql,postgres} images
  # ref: https://github.com/dani-garcia/bitwarden_rs/wiki/Using-the-MySQL-Backend
  #      https://github.com/dani-garcia/bitwarden_rs/wiki/Using-the-PostgreSQL-Backend
  externalDatabase:
    enabled: true
    # Supported values: 'mysql', 'postgresql'.
    type: "postgresql"
    # Database host. Required if external database is enabled.
    host: "10.0.40.11"
    # Database port. Optional, default value is specific to the database backend.
    port: "5432"
    # Database name.
    database: "bitwarden"
    # Database user.
    user: ""
    # Database password. Special characters must be escaped with percent encoding.
    password: ""
    # Use existing secret for database credentials.
    existingSecret:
      enabled: true
      name: "bitwarden-secret"
      userKey: "bitwarden-dbuser"
      # Special characters in the password value must be escaped with percent encoding.
      passwordKey: "bitwarden-dbpassword"
  # Enable SMTP. https://github.com/dani-garcia/bitwarden_rs/wiki/SMTP-configuration
  smtp:
    enabled: false
    # SMTP hostname, required if SMTP is enabled
    host: ""
    # SMTP sender e-mail address, required if SMTP is enabled
    from: ""
    # SMTP sender name, defaults to 'Bitwarden_RS'
    fromName: ""
    # Enable SSL connection
    ssl: true
    # SMTP port
    port: 587
    # SMTP username
    user: ""
    # SMTP password. Required is user is specified, ignored if no user provided
    password: ""
    # Use existing secret for SMTP authentication
    existingSecret:
      enabled: false
      name: ""
      userKey: ""
      passwordKey: ""
  # Enable Yubikey 2FA: https://github.com/dani-garcia/bitwarden_rs/wiki/Enabling-Yubikey-OTP-authentication
  yubico:
    enabled: false
    # OTP verification server. Will use the default YubiCloud servers if not specified
    server: ""
    # API Client ID for OTP server. Ignored if existingSecret is provided.
    clientId: ""
    # API Secret Key for OTP server. Required if clientId is specified, ignored when using existingSecret.
    secretKey: ""
    # Use existing secret for API keys
    existingSecret:
      enabled: false
      name: ""
      clientIdKey: ""
      secretKeyKey: ""

env:
# If you plan to run the WebUI on a port other than port 80, specify that here:
# For example, if running the container as a non-root user.
  ROCKET_PORT: "8443"
  SHOW_PASSWORD_HINT: "false"
  ROCKET_WORKERS: "10"
  WEB_VAULT_ENABLED: "true"

persistence:
  type: statefulset
  enabled: true
  size: 1Gi
  accessMode: ReadWriteOnce
  ## Persistent Volume storage class
  # storageClass: "-"
  ## Use existing Persistent Volume Claim
  existingClaim: "nfs-pvc-bitwarden"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8443
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}
  additionalSpec: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Request-Id: $req_id";
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/limit-connections: "25"
    nginx.ingress.kubernetes.io/limit-rps: "15"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/auth-url: "http://authelia.services.svc.cluster.local/api/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://authelia.technolab.duckdns.org/"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
  hosts:
  - host: bitwarden.technolab.duckdns.org
    paths: ["/"]
  tls:
  - hosts:
    - bitwarden.technolab.duckdns.org
    secretName: services-technolab-duckdns-org-tls

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
